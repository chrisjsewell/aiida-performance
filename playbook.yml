- name: Run profiling
  hosts: localhost
  gather_facts: yes

  vars:
    RERUN: false
    PYTHON_VERSION: "3.7"
    GIT_BRANCH: "release/1.3.0"
    IMAGE_TAG: "py3.7-v1.3.0"
    AIIDA_BACKEND: "django"
    OUTPUT_FOLDER: "{{ IMAGE_TAG }}-{{ AIIDA_BACKEND }}"
    INITIAL_WAIT: 30
    TEST_NAME: delete_nodes

  tasks:

    - name: Remove outputs
      when: RERUN
      file:
        path: outputs/
        state: absent

    - name: Add outputs folder
      file:
        path: "outputs/"
        state: directory

    - name: dump facts
      copy:
        content: "{{ hostvars[inventory_hostname] | to_nice_json }}"
        dest: outputs/host-facts.json

    - name: "Add outputs folder: {{ OUTPUT_FOLDER }}"
      file:
        path: "outputs/{{ OUTPUT_FOLDER }}"
        state: directory

    - name: Create and start docker services
      docker_compose:
        project_src: .
        build: yes
      environment:
        PYTHON_VERSION: "{{ PYTHON_VERSION }}"
        GIT_BRANCH: "{{ GIT_BRANCH }}"
        IMAGE_TAG: "{{ IMAGE_TAG }}"
        AIIDA_BACKEND: "{{ AIIDA_BACKEND }}"

    - name: Wait for initialisation
      command: |
        docker exec aiida-core timeout {{ INITIAL_WAIT }}s bash -c \
          'until [ -f /opt/.initialised ] 2> /dev/null; do echo -n .; sleep 1; done'
      changed_when: False

    - name: touch run_times.yaml
      file:
        path: outputs/{{ OUTPUT_FOLDER }}/run_times.yml
        state: touch

    - name: "Run pre-test script: {{ TEST_NAME }}"
      command: >
        docker exec --user aiida aiida-core verdi run tests/{{ TEST_NAME }}.py --pre

    - name: "Reset database stats"
      command:
        cmd: >
          docker exec --user aiida aiida-core verdi run tests/db_stats.py reset
      changed_when: False
  
    - name: "Run test script: {{ TEST_NAME }}"
      command:
        cmd: >
          docker exec --user aiida aiida-core /usr/bin/time -f "{{ TEST_NAME }}: %e" -o /home/aiida/outputs/run_times.yml -a --quiet
          py-spy record --subprocesses -f raw -o /home/aiida/outputs/{{ TEST_NAME }}.prof --
          verdi run tests/{{ TEST_NAME }}.py
        creates: outputs/{{ OUTPUT_FOLDER }}/{{ TEST_NAME }}.prof
        # TODO on exit raises Error: No child process (os error 10)
      ignore_errors: yes
      register: test_output
    
    - name: "Convert profile output to SVG: {{ TEST_NAME }}"
      shell:
        cmd: > 
          docker run --rm --name flamegraph
          -v "$PWD/plotting":/usr/src/myapp/plotting -v "$PWD/outputs/{{ OUTPUT_FOLDER }}":/usr/src/myapp/outputs
          -w /usr/src/myapp perl:5.20
          perl plotting/flamegraph.pl --inverted --title {{ TEST_NAME }} outputs/{{ TEST_NAME }}.prof
          > outputs/{{ OUTPUT_FOLDER }}/{{ TEST_NAME }}.svg
        creates: outputs/{{ OUTPUT_FOLDER }}/{{ TEST_NAME }}.svg

    - name: "Dump database query stats: {{ TEST_NAME }}"
      when: test_output.changed
      command:
        cmd: >
          docker exec --user aiida aiida-core verdi run tests/db_stats.py --path "/home/aiida/outputs" --name "{{ TEST_NAME }}" queries reset
        creates: outputs/{{ OUTPUT_FOLDER }}/{{ TEST_NAME }}_queries.html

    - name: "Dump database indices stats"
      when: test_output.changed
      command:
        cmd: >
          docker exec --user aiida aiida-core verdi run tests/db_stats.py --path "/home/aiida/outputs" --name "final" indices
        creates: outputs/{{ OUTPUT_FOLDER }}/final_indices.html

    - name: Tear down existing docker services
      docker_compose:
        project_src: .
        state: absent
        remove_volumes: yes
      environment:
        PYTHON_VERSION: "{{ PYTHON_VERSION }}"
        GIT_BRANCH: "{{ GIT_BRANCH }}"
        IMAGE_TAG: "{{ IMAGE_TAG }}"
        AIIDA_BACKEND: "{{ AIIDA_BACKEND }}"